{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","externalContainer","messageContainer","avatar","src","alt","messageWrapper","message","name","messageTextAndTimeContainer","messageText","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","priorityColor","affair","priority","buttonMargin","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","onEnterKey","totalUsers","Container","inputContainer","onKeyDown","onBlur","disabled","totalUsersCountMargin","GreetingContainer","users","addUserCallback","setName","setError","trimmedName","alert","length","currentInputString","trim","HW3","setUsers","newArray","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.5f6606f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"externalContainer\":\"Message_externalContainer__3V608\",\"messageContainer\":\"Message_messageContainer__gVn5t\",\"avatar\":\"Message_avatar__FN1Zd\",\"messageWrapper\":\"Message_messageWrapper__UESVq\",\"message\":\"Message_message__2mCZA\",\"name\":\"Message_name__2OUUV\",\"messageTextAndTimeContainer\":\"Message_messageTextAndTimeContainer__2HCOZ\",\"messageText\":\"Message_messageText__GqkVv\",\"time\":\"Message_time__2gvBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Greeting_Container__2VaYG\",\"inputContainer\":\"Greeting_inputContainer__22G4C\",\"buttonMargin\":\"Greeting_buttonMargin__3MOwB\",\"totalUsersCountMargin\":\"Greeting_totalUsersCountMargin__3pLGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__3KEQu\",\"superInput\":\"SuperInputText_superInput__1tt0o\",\"errorInput\":\"SuperInputText_errorInput__TBbTU\",\"error\":\"SuperInputText_error__28EJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"low\":\"Affairs_low__26xC0\",\"middle\":\"Affairs_middle__1D2ft\",\"high\":\"Affairs_high__M3Wl8\",\"buttonMargin\":\"Affairs_buttonMargin__3-MgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__OSSjx\",\"red\":\"SuperButton_red__pHv6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2M6OU\",\"column\":\"HW4_column__33fNC\",\"testSpanError\":\"HW4_testSpanError__2XA3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1mw1s\",\"spanClassName\":\"SuperCheckbox_spanClassName__3zFUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1sL9M\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessageType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageType) {\n    return (\n        <div className={s.externalContainer}>\n            <div className={s.messageContainer}>\n                <div className={s.avatar}>\n                    <img src={props.avatar} alt=\"\"/>\n                </div>\n                <div className={s.messageWrapper}>\n                    <div className={s.message}>\n                        <div className={s.name}>\n                            <p>{props.name}</p>\n                        </div>\n                        <div className={s.messageTextAndTimeContainer}>\n                            <div className={s.messageText}>\n                                <p>{props.message}</p>\n                            </div>\n                            <div className={s.time}>\n                                <p>{props.time}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'User name',\n    message: 'User text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            {/*<hr/>*/}\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            {/*<hr/>*/}\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}\n    const priorityColor = s[props.affair.priority];\n\n    return (\n        <div>\n            <span>{props.affair.name} - <span className={priorityColor}>{props.affair.priority}</span></span>\n            <SuperButton className={s.buttonMargin} onClick={deleteCallback}>\n                X\n            </SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype AffairsPropsType = {\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            // key всегда должен быть самым верхним элементом\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div>\n            {mappedAffairs}\n\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n        </div>\n    )\n}\n\nexport default Affairs;\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\nexport type AffairType = {\n    name: string\n    _id: number\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs;\n    else return affairs.filter(affair => affair.priority === filter);\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(affair => affair._id !== _id);\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    onEnterKey: (e: KeyboardEvent<HTMLInputElement>) => void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, onEnterKey, error, totalUsers} // деструктуризация пропсов\n) => {\n\n    return (\n        <div className={s.Container}>\n            <div className={s.inputContainer}>\n                <SuperInputText\n                    value={name}\n                    onChange={setNameCallback}\n                    onKeyDown={onEnterKey}\n                    onBlur={setNameCallback}\n                    error={error}\n                />\n            </div>\n            <div>\n                <SuperButton disabled={!name} onClick={addUser} className={s.buttonMargin}>\n                    add\n                </SuperButton>\n                <span className={s.totalUsersCountMargin}>{totalUsers}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> =\n    ({users, addUserCallback}) => { // деструктуризация пропсов\n        const [name, setName] = useState<string>('')\n        const [error, setError] = useState<string>('')\n\n        const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n            let currentInputString = e.currentTarget.value.trim();\n            if (currentInputString) {\n                setError('')\n                setName(currentInputString)\n            } else {\n                setName('')\n                setError('Error: name is required!')\n            }\n        }\n\n        const addUser = () => {\n            const trimmedName = name\n            if (trimmedName) {\n                setError('')\n                addUserCallback(trimmedName)\n                alert(`Hello ${trimmedName} !`)\n                setName('')\n            }\n        }\n\n        const onEnterKey = (e: KeyboardEvent<HTMLInputElement>) => {\n            if (e.key === 'Enter' && name) {\n                addUser();\n            }\n        }\n\n        let totalUsers = users.length\n\n        return (\n            <Greeting\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                onEnterKey={onEnterKey}\n                error={error}\n                totalUsers={totalUsers}\n            />\n        )\n    }\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([])\n\n\n    const addUserCallback = (name: string) => {\n        const newUser: UserType = {\n            _id: v1(),\n            name\n        }\n        const newArray = [newUser, ...users]\n        setUsers(newArray)\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // если есть пропс onChange, то передаём ему объект ивента\n        onChangeChecked && onChangeChecked(e.currentTarget.checked) // если есть пропс onChangeChecked, то передаём ему текущее значение атрибута checked объекта ивента\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={`${s.blue}`} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from '../../../p2-homeworks/h4/HW4';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}